% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modsem_lms_qml.R
\name{modsem_lms_qml}
\alias{modsem_lms_qml}
\title{Interaction between latent variables using lms and qml approaches}
\usage{
modsem_lms_qml(
  model.syntax = NULL,
  data = NULL,
  method = "lms",
  verbose = NULL,
  optimize = NULL,
  nodes = NULL,
  convergence = NULL,
  center.data = NULL,
  standardize.data = NULL,
  standardize.out = NULL,
  standardize = NULL,
  mean.observed = NULL,
  double = NULL,
  hessian = NULL,
  cov.syntax = NULL,
  ...
)
}
\arguments{
\item{model.syntax}{lavaan syntax}

\item{data}{dataframe}

\item{method}{method to use:
"lms" = laten model structural equations (not passed to lavaan).
"qml" = quasi maximum likelihood estimation of laten model structural equations (not passed to lavaan).}

\item{verbose}{should estimation progress be shown}

\item{optimize}{should starting parameters be optimized}

\item{nodes}{number of quadrature nodes (points of integration) used in lms, 
increased number gives better estimates but slower computation. How many is needed, depends on the complexity of the model 
for simple models 16 is enough, for more complex models 100 is usually enough.}

\item{convergence}{convergence criterion. Lower values give better estimates but slower computation.}

\item{center.data}{should data be centered before fitting model}

\item{standardize.data}{should data be scaled before fitting model, will be overridden by 
standardize if standardize is set to TRUE.
NOTE: It is recommended that you estimate the model normally and then standardize the output using 
`standardized_estimates()`.}

\item{standardize.out}{should output be standardized (note will alter the relationsships of 
parameter constraints, since to parameters are scaled unevenly, even if they 
have the same label). This does not alter the estimation of the model, only the 
output.
NOTE: It is recommended that you estimate the model normally and then standardize the output using 
`standardized_estimates()`.}

\item{standardize}{will standardize the data before fitting the model, remove the mean
structure of the observed variables, and standardize the output. Note that standardize.data
mean.observed, standardize.out will be overridden by standardize if standardize is set to TRUE.
NOTE: It is recommended that you estimate the model normally and then standardize the output using 
`standardized_estimates()`.}

\item{mean.observed}{should mean structure of the observed variables be estimated, 
will be overridden by standardize if standardize is set to TRUE.
NOTE: Not recommended unless you know what you are doing.}

\item{double}{try to double the number of dimensions of integrations used in LMS,
this will be extremely slow, but should be more similar to mplus.}

\item{hessian}{should hessian (i.e., std.errors) be calculated}

\item{cov.syntax}{model syntax for implied covariance matrix (see 'vignette("interaction_two_etas", "modsem")')}

\item{...}{arguments passed to other functions}
}
\value{
modsem_lms or modsem_qml object
}
\description{
modsem_lms_qml is a function for estimating interaction effects between latent variables, 
in structural equation models (SEMs), using product indicators.
Methods for estimating interaction effects in SEM's can basically be split into 
two frameworks: 1. Product Indicator based approaches ("dblcent", "rca", "uca", 
"ca", "pind"), and 2. Distributionally based approaches ("lms", "qml").
modsem_lms_qml() is essentially a just 
a fancy wrapper for lavaan::sem()  which generates the 
necessary syntax, and variables for the estimation of models with latent product indicators.
}
\examples{
library(modsem)
# For more examples check README and/or GitHub.
# One interaction
m1 <- '
  # Outer Model
  X =~ x1 + x2 +x3
  Y =~ y1 + y2 + y3
  Z =~ z1 + z2 + z3
  
  # Inner model
  Y ~ X + Z + X:Z 
'

\dontrun{
# QML Approach
est1 <- modsem_lms_qml(m1, oneInt, method = "qml")
summary(est1)


# Theory Of Planned Behavior
tpb <- ' 
# Outer Model (Based on Hagger et al., 2007)
  ATT =~ att1 + att2 + att3 + att4 + att5
  SN =~ sn1 + sn2
  PBC =~ pbc1 + pbc2 + pbc3
  INT =~ int1 + int2 + int3
  BEH =~ b1 + b2

# Inner Model (Based on Steinmetz et al., 2011)
  # Covariances
  ATT ~~ SN + PBC
  PBC ~~ SN 
  # Causal Relationsships
  INT ~ ATT + SN + PBC
  BEH ~ INT + PBC 
  BEH ~ INT:PBC  
'

# lms approach
estTpb <- modsem_lms_qml(tpb, data = TPB, method = lms)
summary(estTpb)
}

}
